- carets:
	- jump through words - ctrl+left/right jumps to the beginning of the next/prev. word.
	- EOL free - allow caret past EOL - pad with spaces if inserting text at caret.
	- EOF free - allow caret past EOF - pad with lines if inserting text at caret.
	- scroll margins - moving the caret outside the view minus some margin scrolls the view in that direction.
	- smart right scroll - scroll right as if the view is springed on the left (i.e. scroll back when moving left).

- autodetect tabs mode and tabsize
	- skip empty lines
	- count the number of lines that use tabs exclusively for indentation
	- count the number of lines that use spaces exclusively for indentation
	- count the number of lines that use a mixture of tabs and spaces for indentation
	- count the number of lines that use tabs inside the line
	- count the number of lines that use multiple spaces inside the line

- tab_align_args
	- enable if
		- indenting
		- indenting to > 1 the above indent
		- line > 1
		- above line has '(' after current vcol
	- add spaces up to and including the col of the found '('
	- replace the indent tab surplus of the above indent if using tabs

- tab_align_list
	- enable if
		- not indenting
		- line > 1
		- above line has a word after at least 2 spaces (or 1 tab) after vcol-1
	- add spaces up to the col of the found word - 1

- fixed tab stops
	- tab stops with left, right or center align
	- shortcut to align a line to tabstops, using double+ spaces or tabs as separators
	- automatic formatting
		- keep everything aligned while typing inside the aligned "cells" of the table
		- typing two spaces or a tab skips to the next "cell"

- jump through virtual tabs
	- jump through fixed (tabsize) virtual tabs
	- jump through autoalign_list virtual tabs
	- jump through autoalign_args virtual tabs
	- jump through tabstop cells

- normalization:
	* convert spaces to tabs everywhere on saving

- rendering:
	- syntax highlighting with embedded lexers (js and css in html etc.)
	- bracket matching highlighting


CODEDITOR
---------
- file tabs
	- nav with ctrl+tab, ctrl+shift+tab
	- ctrl+n new
	- ctrl+o open
	- ctrl+w close
	- drag to reorder
	- top or bottom display
- f11 full screen
- sessions:
	- save and restore all open buffers along with view, caret and selection state
	- autosave
- customization:
	- global, local (per-project), per-filetype, per-user config files (like scite).
	- reload config on the fly when saving the config file.
	- custom key bindings.
- simultaneous edits
	- ctrl+click creates multiple cursors and movement and typing is available to all
	- ctrl+select creates multiple selections that can be copy/pasted
- hi-level feats
	- create tooltip list from the syntax hightlighter
	- integrate a spell checking library
	- integrate a Lua linter
	- minimap like sublime text


QUESTIONS
---------
- find/replace macros:
	- make a table based on separators (see automatic table formatting above)
- bookmarks:
	- how to manage writing code and browsing the same code (but different parts of it) at the same time? split view?
		- idea: simple shortcut to go back to where the cursor was last time you were typign
