This is a description of the lua-files text shaping and rendering stack listing the major modules in the pipeline,
wanted capabilities and technology choices, options and routes taken for fulfilling those capabilities.

unicode text analysis
	- unicode text segmentation (UAX 29)
		- grapheme cluster boundary (?)
		- word boundary (libunibreak, icu with dictionaries)
		- sentince boundary (?)

unicode text analysis for shaping
	- line wrapping and justification
		- unicode line breaking algorithm (UAX 14)
			- libunibreak
			- icu with dictionaries
			- what about hyphenation
			- other specific requirements?
	- unicode bidi algorithm (UAX 9; fribidi, icu)
	- use of unicode script property of code points to split text into scripts (UAX 24)

unicode text shaping and positioning
	- complex shaping (glyph selection and positioning; open-type feature selection; glyph variant selection)
		- open type shaper (harfbuzz + freetype)
		- graphite shaper (libgraphite2)

text positioning alteration
	- text path alteration
		- text following path
		- subscript/superscript

text effects
	- underline, strike-through

text path measuring
	- baseline path (eg. for underline and strike-through with custom stroke)
	- bbox (cached)

glyph rasterization
	- glyph rasterization (freetype)
	- glyph bitmap caching (fractional positioning, no rotation, color-filled only)
	- glyph compositing (alpha masking or rgb-masking with gamma correction)
